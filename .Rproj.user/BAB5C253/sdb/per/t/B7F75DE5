{
    "collab_server" : "",
    "contents" : "---\ntitle: \"Air Jordan Resell Market\"\noutput: rmarkdown::github_document\n---\n## Data Cleansing \n```{r warning = FALSE, message = FALSE}\nlibrary(tidyverse)\nlibrary(stringr)\nlibrary(lubridate)\nlibrary(reshape2)\nlibrary(RColorBrewer)\nlibrary(scales)\n\n#Read in data and rename\nsneakers <- read.csv(\"data/shoeDataV2.csv\", header = FALSE, stringsAsFactors = FALSE)\ncolnames(sneakers) <- c('Sneaker', 'Sales', 'Premium', 'MarketAvg', \n                        'ProductID', 'Retail', 'ReleaseDate', 'Colorway', 'MarketRange')\n\n# Regex Cleaning\nsneakers <- sneakers[!grepl('GS',sneakers$Sneaker, fixed = TRUE),]\nsneakers <- sneakers[grepl('\\\\$\\\\d+',sneakers$Retail),]\nsneakers$MarketAvg <- gsub('$', '', sneakers$MarketAvg, fixed = TRUE)\nsneakers$Premium <- gsub('%', '', sneakers$Premium, fixed = TRUE)\nsneakers$Retail <- gsub('$', '', sneakers$Retail, fixed = TRUE)\nsneakers$MarketRange <- gsub('$', '', sneakers$MarketRange, fixed = TRUE)\nsneakers$MarketRange <- gsub('--', 'NA', sneakers$MarketRange, fixed =TRUE)\nsneakers$MarketRange <- gsub(',', '', sneakers$MarketRange, fixed =TRUE)\nsneakers$Retail <- gsub(',', '', sneakers$Retail, fixed =TRUE)\n\n# Tidying Up Data\nsneakers <- sneakers %>% separate(MarketRange, into = c('MarketLow', 'MarketHigh'), sep = ' - ')\nnumerics <- c('Sales', 'Premium', 'MarketAvg', 'Retail', 'MarketLow', 'MarketHigh')\nsneakers[numerics] <- sapply(sneakers[numerics], as.numeric)\n\n# Date Variables\nsneakers$ReleaseDate <- ymd(sneakers$ReleaseDate)\nsneakers$Year <- year(sneakers$ReleaseDate)\n\n# Parse Sneaker Names #\nsneakers <- sneakers[!grepl('X{2,3}\\\\d*', sneakers$Sneaker),] #Remove XX4 models and up \nsneakers <- sneakers[grepl('(?<=Jordan\\\\s)\\\\d', sneakers$Sneaker, perl = TRUE),] #Only keep Air Jordan \n#(number) models (exclude Spizike's and Fusions)\nsneakers$Colorway <- gsub('Jordan\\\\s\\\\d+\\\\s', '', sneakers$Sneaker)\nsneakers$RetroOG <- ifelse(grepl('\\\\d+\\\\sOG', sneakers$Sneaker), 'OG', 'Retro')\nsneakers$ModelNumber <- as.numeric(str_extract(sneakers$Sneaker, '(?<!\\\\()\\\\d+(?!\\\\))'))\nsneakers <- sneakers %>% filter(ModelNumber < 2010)\n\n# Data Anamolies and Missing Sneakers Hard Fixes #\nsneakers <- mutate(sneakers, RetroOG = ifelse(ModelNumber == 23 & Year == 2008, 'OG', RetroOG))\nbred2001 <- c('Jordan 1 Retro Bred (2001)', 54, '', 705, '136066-061', 100, '2001-08-25', \n              'Black/Varsity Red-White', 407, 693, 2001, 'Retro', 1)\nroyal2001 <- c('Jordan 1 Retro Royal Blue (2001)', 34, '', 758, '136066-041', 100, '2001-10-06', \n               'Black/Royal Blue', 547, 1007, 2001, 'Retro', 1)\nsneakers <- rbind(sneakers, bred2001, royal2001)\nsneakers[numerics] <- sapply(sneakers[numerics], as.numeric)\n\n```\n\n## Data Used in Plots \nThis is the final data that will be used to create the data visualizations.  \n```{r}\nhead(sneakers)\n```\n\nTo create a heatmap we use the melt() function from the reshape library to create counts by ModelNumber and Year. \n```{r}\nsneakersg3 <- table(filter(sneakers, RetroOG == 'Retro') %>% select(ModelNumber, Year)) %>% melt()\nhead(sneakersg3)\n```\n\n\n## Data Visualizations\nWe first examine the overall Air Jordan Resell Market. \n```{r warning = FALSE, fig.width = 12, fig.height = 8}\n### Plots ###\ng <- ggplot(data = sneakers, aes(x = ModelNumber, y = MarketAvg))\ng + geom_point(aes(size = Sales, color = rank(Premium)), alpha = 0.5) +\n  ggtitle(\"Air Jordan Market Averages\") +\n  xlab(\"Model Number\") +\n  ylab(\"Market Average\") +\n  scale_x_discrete(breaks=seq(0, 23, 1)) +\n  scale_colour_gradient(low=\"firebrick1\", high=\"forestgreen\") +\n  theme(panel.grid.major = element_blank(), \n        panel.grid.minor = element_blank(), \n        panel.background = element_blank(), \n        plot.title = element_text(size = 24, face = \"bold\"),\n        axis.line = element_line(colour = \"darkgrey\"), \n        legend.position = \"none\", \n        text=element_text(family=\"Gill Sans Light\")) +\n  scale_size(range = c(0, 15)) +\n  ylim(0, 1000)\n```\nThis bubble chart allows us to see the variation in resell prices by shoe model. Quickly we can that some of the most popular Air Jordan models, namely the I, IV, V, XI, and XII have the largest number of secondary sales.  \n\nNext we examine the release patterns of the Air Jordan line.\n```{r warning = FALSE, fig.width = 12, fig.height = 8}\ng3 <- ggplot() \ng3 + geom_tile(data = sneakersg3, aes(x = factor(Year), y = factor(ModelNumber),\n                                      fill = value), width=.9, height=.9) +\n     labs(fill='Sneaker Release Volume') +\n     ggtitle(\"Air Jordan Retro Release Heat Map\") +\n     scale_fill_gradientn(colours=c(\"lightcyan1\",\"lightgoldenrod1\",\"darksalmon\"), \n                          labels=c(\"0\", \"2\", \"4\", \"6\", \"8\", \"10+\"),\n                          breaks = c(0, 2, 4, 6, 8, 10), limits=c(0, 10), oob=squish) +\n     theme_minimal() +\n     theme(panel.grid.major = element_blank(),\n           panel.grid.minor = element_blank(), \n           plot.title = element_text(size = 24, face = \"bold\"), \n           axis.title.x=element_blank(),\n           axis.text.x = element_text(angle = -40, hjust = .5),\n           axis.title.y=element_blank(),\n           axis.text.y=element_text(size=10, hjust=1),\n           text=element_text(family=\"Gill Sans Light\"),\n           legend.position= 'bottom',\n           legend.direction = 'horizontal',\n           legend.title.align=0.5,\n           legend.key.width=unit(1.25,\"cm\")) +\n      guides(fill = guide_colourbar(title.position = \"top\")) \n\n```",
    "created" : 1508124464018.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3381673071",
    "id" : "B7F75DE5",
    "lastKnownWriteTime" : 1508129938,
    "last_content_update" : 1508129938677,
    "path" : "~/Desktop/Code/Sneakers/writeup.Rmd",
    "project_path" : "writeup.Rmd",
    "properties" : {
        "source_window_id" : "",
        "tempName" : "Untitled1"
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}